// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SSMB.SQL;

namespace SSMB.SQL.Migrations
{
    [DbContext(typeof(SsmbDbContext))]
    [Migration("20190724174859_AddAlertTables")]
    partial class AddAlertTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview5.19227.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SSMB.Domain.Alert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ItemId")
                        .HasColumnName("ItemId");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<long>("UserId")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("Alerts");
                });

            modelBuilder.Entity("SSMB.Domain.AlertCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlertId");

                    b.Property<byte>("Field")
                        .IsUnicode(false);

                    b.Property<byte>("Operator");

                    b.Property<long>("Value")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("AlertId");

                    b.ToTable("AlertConditions");
                });

            modelBuilder.Entity("SSMB.Domain.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Cost");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Quality")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<long>("ScrapValue")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(-1L);

                    b.Property<int>("Space");

                    b.Property<string>("StructuredDescription")
                        .IsRequired();

                    b.Property<string>("Type")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<long>("Weight");

                    b.HasKey("ItemId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("SSMB.Domain.LtsOrderEntry", b =>
                {
                    b.Property<int>("EntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BatchId");

                    b.Property<string>("OrderType")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<long>("Price");

                    b.Property<int>("Quantity");

                    b.HasKey("EntryId");

                    b.HasIndex("BatchId");

                    b.ToTable("LtsOrder");
                });

            modelBuilder.Entity("SSMB.Domain.OrderBatch", b =>
                {
                    b.Property<int>("BatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int>("ItemId");

                    b.HasKey("BatchId");

                    b.HasIndex("ItemId");

                    b.ToTable("OrderBatch");
                });

            modelBuilder.Entity("SSMB.Domain.OrderEntry", b =>
                {
                    b.Property<int>("EntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BaseName")
                        .IsRequired()
                        .HasMaxLength(70);

                    b.Property<int>("BatchId");

                    b.Property<string>("GalaxyName")
                        .IsRequired()
                        .HasMaxLength(70);

                    b.Property<bool>("IsUserBase");

                    b.Property<string>("OrderType")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<long>("Price");

                    b.Property<int>("Quantity");

                    b.HasKey("EntryId");

                    b.HasIndex("BatchId");

                    b.ToTable("OrderEntry");
                });

            modelBuilder.Entity("SSMB.Domain.Alert", b =>
                {
                    b.HasOne("SSMB.Domain.Item", "Item")
                        .WithMany("Alerts")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SSMB.Domain.AlertCondition", b =>
                {
                    b.HasOne("SSMB.Domain.Alert", "Alert")
                        .WithMany("Conditions")
                        .HasForeignKey("AlertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SSMB.Domain.LtsOrderEntry", b =>
                {
                    b.HasOne("SSMB.Domain.OrderBatch", "Batch")
                        .WithMany("LtsEntries")
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SSMB.Domain.OrderBatch", b =>
                {
                    b.HasOne("SSMB.Domain.Item", "Item")
                        .WithMany("Orders")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SSMB.Domain.OrderEntry", b =>
                {
                    b.HasOne("SSMB.Domain.OrderBatch", "Batch")
                        .WithMany("Entries")
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
